name: Build

on:
  push:
    branches: [ main ]
    tags: ['*']
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  APP_NAME: websockify-rs

jobs:
  build:
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix: 
        config:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            test: true
            output_extension: .exe
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            test: false
            output_extension: .exe
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            test: true
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            test: false
    steps:
    - name: Git config
      if: ${{ matrix.config.os == 'windows-latest' }}
      run: git config --global core.autocrlf input
    - uses: actions/checkout@v3
    - name: Checkout submodule
      run: git submodule update --init --recursive
    - name: Install musl tools
      if: ${{ matrix.config.target == 'x86_64-unknown-linux-musl' }}
      run: sudo apt-get install musl-tools musl-dev
    - name: Ensure Rust Target
      run: rustup target add ${{ matrix.config.target }}
    - name: Cache dependencies
      uses: actions/cache@v2
      env:
        cache-name: cache-cargo
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.crate') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
    - name: Test
      if: ${{ matrix.config.test }}
      uses: houseabsolute/actions-rust-cross@v0
      with:
        command: test
        target: ${{ matrix.config.target }}
        args: --release --target ${{ matrix.config.target }} --locked --verbose
    - name: Build
      uses: houseabsolute/actions-rust-cross@v0
      with:
        command: build
        target: ${{ matrix.config.target }}
        args: --release --target ${{ matrix.config.target }} --locked --verbose
        strip: true
    - name: Archive (Linux)
      if: ${{ runner.os == 'Linux' }}
      run: zip ./target/${{ matrix.config.target }}/release/${{ env.APP_NAME}}-${{ matrix.config.target }}.zip ./target/${{ matrix.config.target }}/release/${{ env.APP_NAME}}${{ matrix.config.output_extension }}
    - name: Archive (Windows)
      if: ${{ runner.os == 'Windows' }}
      run: Compress-Archive -DestinationPath ./target/${{ matrix.config.target }}/release/${{ env.APP_NAME}}-${{ matrix.config.target }}.zip -Path ./target/${{ matrix.config.target }}/release/${{ env.APP_NAME}}${{ matrix.config.output_extension }} 
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.APP_NAME}}-${{ matrix.config.target }}
        path: ./target/${{ matrix.config.target }}/release/${{ env.APP_NAME}}-${{ matrix.config.target }}.zip
  
  release:
    permissions:
      contents: write
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
      - name: Resolve release files
        id: resove-release-files
        run: |
          echo 'release_files<<EOF' >> $GITHUB_OUTPUT
          realpath *.zip >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{steps.resove-release-files.outputs.release_files}}
